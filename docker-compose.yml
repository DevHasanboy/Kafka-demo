version: "3.8"

services:
  ### 1️⃣ Zookeeper (Kafka uchun majburiy)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  ### 2️⃣ Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  ### 3️⃣ PostgreSQL (Postgres Ma'lumotlar Bazasi)
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: kafkadb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 7777777
    ports:
      - "5432:5432"

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: always
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092

  ### 4️⃣ Kafka User Service (Asosiy Spring Boot ilova)
  kafka-user:
    build: ./kafka-user
    container_name: kafka-user
    restart: always
    depends_on:
      - kafka
      - postgres
    environment:
      SPRING_APPLICATION_NAME: kafka-user
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/kafkadb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 7777777
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_DATABASE: postgresql
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SERVER_PORT: 8877
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      KAFKA_TOPIC_NAME: kafka-topic
    ports:
      - "8877:8877"

#  ### 5️⃣ Kafka Producer Service
#  kafka-producer:
#    build: ./kafka-producer-service
#    container_name: kafka-producer
#    restart: always
#    depends_on:
#      - kafka
#      - postgres
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/kafkadb
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: 7777777
#    ports:
#      - "8081:8081"

  ### 6️⃣ Kafka Consumer Service
  kafka-consumer:
    build: .
    container_name: kafka-consumer
    restart: always
    depends_on:
      - kafka
      - postgres
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/kafkadb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 7777777
      SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      KAFKA_TOPIC_NAME: kafka-topic
    ports:
      - "9999:9999"

